package edu.android.podcast_listener;

import java.io.IOException;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.NavUtils;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import edu.android.podcast_listener.util.PodcastConstants;

public class FindCastsActivity extends Activity {
	private EditText urlInput;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_find_casts);
		// Show the Up button in the action bar.
		getActionBar().setDisplayHomeAsUpEnabled(true);
		urlInput = (EditText) findViewById(R.id.editText1);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_find_casts, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			// This ID represents the Home or Up button. In the case of this
			// activity, the Up button is shown. Use NavUtils to allow users
			// to navigate up one level in the application structure. For
			// more details, see the Navigation pattern on Android Design:
			//
			// http://developer.android.com/design/patterns/navigation.html#up-vs-back
			//
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public void toResults(View view) {
		Intent intent = new Intent(this, FindCastsResultsActivity.class);
		String podcastUrl = urlInput.getText().toString();
		if (validURL(podcastUrl)) {
			intent.putExtra(PodcastConstants.EXTRA_MESSAGE, podcastUrl);
			startActivity(intent);
		}
	}
	
	private boolean validURL(String podcastUrl) {
		URL url;
		try {
			url = new URL(podcastUrl);
			HttpURLConnection urlConn = (HttpURLConnection) url.openConnection();
			urlConn.connect();
			int code = urlConn.getResponseCode();
			
			if (code == 404) {
				return false;
			}
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (ProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return true;
	}
	

	private Dialog podcastNotFoundAlert() {
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		builder.setTitle(PodcastConstants.ALERT_TITLE);
		builder.setMessage(PodcastConstants.ALERT_MESSAGE);
		builder.setIcon(android.R.drawable.ic_dialog_alert);			
		return builder.create();			
	}

}
